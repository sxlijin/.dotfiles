set nocompatible

" load local config
if filereadable(expand('~/.vimrc_locals'))
  source ~/.vimrc_locals
endif

" load plugins
runtime bundle/vim-pathogen/autoload/pathogen.vim
"call pathogen#infect()
"call pathogen#helptags()

" make tab completion go in the forward direction
let g:SuperTabDefaultCompletionType = "<c-n>"

" centralize swps and backups, instead of scattering them
set backupdir-=.
set backupdir^=~/.vim/bak/
set directory-=.
set directory^=~/.vim/swp/

" color settings
set t_Co=256
let &t_AB="\e[48;5;%dm"
let &t_AF="\e[38;5;%dm"
colorscheme tomorrow-night-sxlijin

" simplify command entry
nnoremap ; :
vnoremap ; :
nnoremap : ;
vnoremap : ;

" remap jk to escape in insert mode
inoremap jk <ESC>

" assorted usability settings
set number
set cursorline
set wildmenu
set lazyredraw
set laststatus=2
set belloff=all

" improve search visuals
set incsearch
set hlsearch

" highlight whitespace
set list
set listchars=tab:â†’.,trail:-,extends:>,precedes:<,nbsp:+

" \t settings
" $ts  $tabstop     spaces per tab stop
" $sts $softtabstop spaces inserted/removed by <TAB>/<BS>
" $sw  $shiftwidth  spaces used for builtin indent ops, e.g. <<, >>
" $et  $expandtab   insert spaces until $sts on <TAB>
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab
autocmd FileType go setlocal noexpandtab

" syntax magic
syntax on
filetype plugin indent on
"set cindent cinkeys-=0#

" folds
set foldmethod=syntax
set foldnestmax=3
autocmd Syntax * normal zR

" splits
set splitbelow
set splitright

" tabbing
cnoreabbrev te tabedit
cnoreabbrev tm tabmove
nnoremap tk :tabprev<CR>
nnoremap tj :tabnext<CR>
nnoremap tq :tabclose<CR>
nnoremap t1 1gt
nnoremap t2 2gt
nnoremap t3 3gt
nnoremap t4 4gt
nnoremap t5 5gt
nnoremap t6 6gt
nnoremap t7 7gt
nnoremap t8 8gt
nnoremap t9 9gt
set showtabline=2
set tabpagemax=100

if has('mouse')
  set mouse=a
  set mousefocus

  " urxvt implements a nonstandard mouse protocol (1015) that supports faster
  " dragging and terminals wider than 223 columns, but Vim doesn't know this.
  if &term =~# '\v^rxvt-unicode%(-|$)'
    set ttymouse=urxvt
  endif

  " tmux implements an upgraded xterm mouse protocol (1006) that supports faster
  " dragging and terminals wider than 223 columns, but it doesn't implement the
  " xterm escape sequence that would allow Vim to autodetect this.
  if &term =~# '\v^tmux%(-|$)'
    set ttymouse=sgr
  endif
endif

" enable bracketed paste with t_ti, t_te
" and use it to pastetoggle
let &t_ti .= "\<Esc>[?2004h"
let &t_te .= "\<Esc>[?2004l"
imap <Esc>[200~ <C-o>;set paste<CR>
cmap <Esc>[200~ <nop>
cmap <Esc>[201~ <nop>
set pastetoggle=<Esc>[201~
