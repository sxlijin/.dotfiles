[credential]
     helper = store
[push]
     default = simple
[core]
     editor = vim
     excludesfile = ~/.gitignore
[alias]
# From https://github.com/git/git/blob/master/contrib/completion/git-completion.bash#L26-L30
#
# If you use complex aliases of form '!f() { ... }; f', you can use the null
# command ':' as the first command in the function body to declare the desired
# completion style.  For example '!f() { : git commit ; ... }; f' will
# tell the completion to use commit completion.  This also works with aliases
# of form "!sh -c '...'".  For example, "!sh -c ': git commit ; ... '".

     s = status

     a = add
     ai = "add --interactive"

     d = diff
     ds = "diff --stat"
     dc = "diff --cached"
     dsc = "diff --stat --cached"

     f = fetch

     c = commit
     cm = "commit --message"
     ca = "commit --all --message"
     cam = "commit --amend"
     camm = "!camm() { : git commit ; git commit --amend --message \"$(git log --max-count=1 --pretty=%B)\" ; } && camm"

     p = push
     pf = "push --force"
     pm = "!pm() { : git push ; git p \"$@\" \"$(git symbolic-ref HEAD):$(git symbolic-ref --short HEAD)\" ; } && pm"
     pfm = "!git pm --force"
     pmf = "!git pfm"

     br = branch
     brd = "branch --delete"

     co = checkout
     cob = "checkout -b"

     rb = rebase
     rbi = "rebase --interactive"

     lg = "log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%cr)%Creset - %C(yellow)%d%Creset %s'"
     lgn = "!git lg -n 10"
     lgs = "!git lg --stat"
     lgp = "!git lg --patch"
     lgsp = "!git lgs --patch"

     rsh = "reset --hard"
     rsm = "reset"
     rss = "reset --soft"

